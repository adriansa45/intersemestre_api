generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model academies {
  academy_id     Int          @id @default(autoincrement())
  departament_id Int
  name           String?      @db.VarChar
  image          String?      @db.VarChar
  departaments   departaments @relation(fields: [departament_id], references: [departament_id], onDelete: NoAction, onUpdate: NoAction)
  subjects       subjects[]
}

model departaments {
  departament_id Int         @id @default(autoincrement())
  study_plan_id  Int
  name           String?     @db.VarChar
  image          String?     @db.VarChar
  academies      academies[]
  study_plans    study_plans @relation(fields: [study_plan_id], references: [study_plan_id], onDelete: NoAction, onUpdate: NoAction)
}

model resources {
  resource_id Int      @id @default(autoincrement())
  subject_id  Int
  number      Int?     @default(1) @db.SmallInt
  name        String   @db.VarChar
  type        Int?     @default(0) @db.SmallInt
  url         String?
  subjects    subjects @relation(fields: [subject_id], references: [subject_id], onDelete: NoAction, onUpdate: NoAction)
}

model study_plans {
  study_plan_id Int            @id @default(autoincrement())
  name          String?        @db.VarChar
  image         String?        @db.VarChar
  departaments  departaments[]
}

model subjects {
  subject_id Int         @id @default(autoincrement())
  academy_id Int
  name       String?     @db.VarChar
  image      String?     @db.VarChar
  resources  resources[]
  academies  academies   @relation(fields: [academy_id], references: [academy_id], onDelete: NoAction, onUpdate: NoAction)
  
}


